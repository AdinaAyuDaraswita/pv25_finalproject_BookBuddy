# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bookBuddyFix.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import res_rc
import sqlite3
from database import create_connection, create_tables
import csv
from PyQt5 import QtCore
import re




class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 752)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, -1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frameHeader = QtWidgets.QFrame(self.centralwidget)
        self.frameHeader.setMaximumSize(QtCore.QSize(16777215, 70))
        self.frameHeader.setStyleSheet("background-color: rgb(0, 0, 128);")
        self.frameHeader.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameHeader.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameHeader.setObjectName("frameHeader")
        self.label_5 = QtWidgets.QLabel(self.frameHeader)
        self.label_5.setGeometry(QtCore.QRect(510, 20, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(7)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 63 14pt \"Yu Gothic UI Semibold\";")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.frameHeader)
        self.label_6.setGeometry(QtCore.QRect(430, 10, 61, 51))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap(":/icon/Book_icon.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setObjectName("label_6")
        self.verticalLayout.addWidget(self.frameHeader)
        self.frame_Base = QtWidgets.QFrame(self.centralwidget)
        self.frame_Base.setStyleSheet("background-color: rgb(234, 241, 255);")
        self.frame_Base.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_Base.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_Base.setObjectName("frame_Base")
        self.frame = QtWidgets.QFrame(self.frame_Base)
        self.frame.setGeometry(QtCore.QRect(40, 40, 211, 491))
        self.frame.setStyleSheet("background-color: rgb(0, 0, 128);\n"
"border-radius: 20px;                         \n"
"border: 1px solid rgba(200, 200, 200, 180);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 90, 191, 71))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #AFCBFF; \n"
"    color: #2D3A4B;\n"
"    border-radius: 8px;\n"
"    padding: 6px 12px;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(255, 244, 79); \n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: rgb(255, 244, 79); \n"
"    border: none;\n"
"    color: #2D3A4B;\n"
"}\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Books.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setGeometry(QtCore.QRect(10, 200, 191, 71))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #AFCBFF; \n"
"    color: #2D3A4B;\n"
"    border-radius: 8px;\n"
"    padding: 6px 12px;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(255, 244, 79); \n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: rgb(255, 244, 79); \n"
"    border: none;\n"
"    color: #2D3A4B;\n"
"}\n"
"")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("member.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon1)
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 310, 191, 71))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #AFCBFF;\n"
"    color: #2D3A4B;\n"
"    border-radius: 8px;\n"
"    padding: 6px 12px;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(255, 244, 79);\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: rgb(255, 244, 79); \n"
"    border: none;\n"
"    color: #2D3A4B;\n"
"}\n"
"")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("Borrower.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon2)
        self.pushButton_5.setObjectName("pushButton_5")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_Base)
        self.stackedWidget.setGeometry(QtCore.QRect(259, 0, 714, 611))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.frame_2 = QtWidgets.QFrame(self.page_3)
        self.frame_2.setGeometry(QtCore.QRect(30, 70, 681, 90))
        self.frame_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 5px;                         \n"
"")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 0, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.frame_2)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_7.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.gridLayout.addWidget(self.lineEdit_7, 0, 4, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_2.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 2, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 3, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.frame_2)
        self.label_12.setObjectName("label_12")
        self.gridLayout.addWidget(self.label_12, 2, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.frame_2)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 0, 5, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 3, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.frame_2)
        self.comboBox.setStyleSheet("QComboBox {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border: 1px solid #7AA9FF;\n"
"    background-color: #f9fcff;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left: 1px solid #C0C0C0;\n"
"    background-color: #e6f0ff;\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(:/con/arrow_down.png); /* opsional, bisa hapus kalau ga ada */\n"
"    width: 12px;\n"
"    height: 12px;\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    selection-background-color: #dceaff;\n"
"    selection-color: #2D3A4B;\n"
"}\n"
"")
        self.comboBox.setEditable(True)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.setItemText(0, "")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.gridLayout.addWidget(self.comboBox, 0, 6, 1, 1)
        self.dateEdit = QtWidgets.QDateEdit(self.frame_2)
        self.dateEdit.setStyleSheet("QDateEdit {\n"
"    padding: 4px;\n"
"    border: 1px solid #ccc;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QDateEdit::down-arrow {\n"
"    image: url(:/icon/arrow_down2.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"QDateEdit::up-arrow {\n"
"    image: url(:/icon/arrow_up.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"\n"
"QDateEdit::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left: 1px solid #ccc;\n"
"}\n"
"")
        self.dateEdit.setObjectName("dateEdit")
        self.dateEdit.setCalendarPopup(True)  
        self.dateEdit.setDate(QtCore.QDate(2025, 1, 1)) 
        self.dateEdit.setMinimumDate(QtCore.QDate(2025, 1, 1))  
        self.dateEdit.setSpecialValueText("")  
        self.dateEdit.clear()  

        self.gridLayout.addWidget(self.dateEdit, 2, 4, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.frame_2)
        self.pushButton.setStyleSheet("background-color: rgb(129, 158, 196); /* biru keabu-an lembut */\n"
"    color: white;\n"
"    border: none;\n"
"    border-radius: 15px;\n"
"    padding: 8px 20px;\n"
"    font-size: 14px;\n"
"background-color: rgb(139, 168, 210);\n"
"    background-color: rgb(90, 120, 160); /* lebih gelap pas ditekan */")
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 2, 6, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.page_3)
        self.tableWidget.setGeometry(QtCore.QRect(30, 230, 681, 301))
        self.tableWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tableWidget.setStyleSheet("QHeaderView::section {\n"
"    background-color: #000080;  \n"
"    color: #ffffff;            \n"
"    padding: 5px;\n"
"    border: 1px solid #CCCCCC;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QTableWidget {\n"
"    background-color: #ffffff;             \n"
"    alternate-background-color: #EAF4FC;   \n"
"}\n"
"\n"
"")
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setShowGrid(False)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(120)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(50)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.pushButton_2 = QtWidgets.QPushButton(self.page_3)
        self.pushButton_2.setGeometry(QtCore.QRect(590, 560, 121, 41))
        self.pushButton_2.setStyleSheet("QPushButton {\n"
"    color: #000080;\n"
"    border: none;\n"
"    border-radius: 15px;\n"
"    padding: 8px 20px;\n"
"    font-size: 14px;\n"
"    background-color: rgb(255, 244, 79);\n"
"}\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(255, 230, 50); \n"
"}\n"
"\n"
"/* Pressed state */\n"
"QPushButton:pressed {\n"
"    background-color: rgb(240, 220, 30);  \n"
"}\n"
"")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2.setIcon(icon3)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_7 = QtWidgets.QLabel(self.page_3)
        self.label_7.setGeometry(QtCore.QRect(30, 20, 681, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("QLabel {\n"
"    border: 2px solid #000080;    \n"
"    border-radius: 5px;           \n"
"    padding: 5px;                 \n"
"    background-color: #ffffff;     \n"
"}\n"
"")
        self.label_7.setObjectName("label_7")
        self.searchLineEdit = QtWidgets.QLineEdit(self.page_3)
        self.searchLineEdit.setGeometry(QtCore.QRect(30, 180, 351, 41))
        self.searchLineEdit.setStatusTip("")
        self.searchLineEdit.setStyleSheet("QLineEdit {\n"
"    padding: 6px 10px;\n"
"    border: 2px solid #FFC107; \n"
"    border-radius: 8px;\n"
"    background-color: rgb(220, 222, 255);\n"
"    color: #333;\n"
"    font-size: 14px;\n"
"}\n"
"QLineEdit:focus {\n"
"    border: 2px solid #FFB300;\n"
"    background-color: #fff9cc;\n"
"}\n"
"")
        self.searchLineEdit.setObjectName("searchLineEdit")
        self.pushButton_10 = QtWidgets.QPushButton(self.page_3)
        self.pushButton_10.setGeometry(QtCore.QRect(390, 180, 101, 41))
        self.pushButton_10.setStyleSheet("QPushButton {\n"
"    padding: 6px 6px;\n"
"    background-color: #0000aa;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    font-size: 14px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #79a8ff;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #FFA000;\n"
"}\n"
"")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_10.setIcon(icon4)
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_11 = QtWidgets.QPushButton(self.page_3)
        self.pushButton_11.setGeometry(QtCore.QRect(510, 180, 93, 41))
        self.pushButton_11.setStyleSheet("QPushButton {\n"
"    background-color: #2196F3;  \n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    font-weight: bold;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #1976D2;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #0D47A1;\n"
"}\n"
"")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("edit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_11.setIcon(icon5)
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.page_3)
        self.pushButton_12.setGeometry(QtCore.QRect(620, 180, 93, 41))
        self.pushButton_12.setStyleSheet("QPushButton {\n"
"    background-color: #FF4C4C; \n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    font-weight: bold;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #E53935;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #C62828;  \n"
"}\n"
"")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_12.setIcon(icon6)
        self.pushButton_12.setObjectName("pushButton_12")
        self.stackedWidget.addWidget(self.page_3)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.label_8 = QtWidgets.QLabel(self.page_5)
        self.label_8.setGeometry(QtCore.QRect(30, 20, 681, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("QLabel {\n"
"    border: 2px solid #000080;    \n"
"    border-radius: 5px;           \n"
"    padding: 5px;                 \n"
"    background-color: #ffffff;     \n"
"}\n"
"")
        self.label_8.setObjectName("label_8")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.page_5)
        self.tableWidget_2.setGeometry(QtCore.QRect(30, 230, 681, 301))
        self.tableWidget_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tableWidget_2.setStyleSheet("QHeaderView::section {\n"
"    background-color: #000080;  \n"
"    color: #ffffff;            \n"
"    padding: 5px;\n"
"    border: 1px solid #CCCCCC;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QTableWidget {\n"
"    background-color: #ffffff;             \n"
"    alternate-background-color: #EAF4FC;   \n"
"}\n"
"\n"
"")
        self.tableWidget_2.setAlternatingRowColors(True)
        self.tableWidget_2.setShowGrid(False)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(5)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(4, item)
        self.tableWidget_2.horizontalHeader().setDefaultSectionSize(120)
        self.tableWidget_2.horizontalHeader().setMinimumSectionSize(50)
        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_2.verticalHeader().setVisible(False)
        self.pushButton_7 = QtWidgets.QPushButton(self.page_5)
        self.pushButton_7.setGeometry(QtCore.QRect(590, 560, 121, 41))
        self.pushButton_7.setStyleSheet("QPushButton {\n"
"    color: #000080;\n"
"    border: none;\n"
"    border-radius: 15px;\n"
"    padding: 8px 20px;\n"
"    font-size: 14px;\n"
"    background-color: rgb(255, 244, 79);\n"
"}\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(255, 230, 50); \n"
"}\n"
"\n"
"/* Pressed state */\n"
"QPushButton:pressed {\n"
"    background-color: rgb(240, 220, 30);  \n"
"}\n"
"")
        self.pushButton_7.setIcon(icon3)
        self.pushButton_7.setObjectName("pushButton_7")
        self.frame_3 = QtWidgets.QFrame(self.page_5)
        self.frame_3.setGeometry(QtCore.QRect(30, 70, 685, 91))
        self.frame_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 5px;                         \n"
"")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_9 = QtWidgets.QLabel(self.frame_3)
        self.label_9.setObjectName("label_9")
        self.gridLayout_2.addWidget(self.label_9, 0, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit_3.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_2.addWidget(self.lineEdit_3, 0, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.frame_3)
        self.label_10.setObjectName("label_10")
        self.gridLayout_2.addWidget(self.label_10, 0, 2, 1, 1)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit_8.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.gridLayout_2.addWidget(self.lineEdit_8, 0, 3, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.frame_3)
        self.label_11.setObjectName("label_11")
        self.gridLayout_2.addWidget(self.label_11, 0, 4, 1, 1)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit_9.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.gridLayout_2.addWidget(self.lineEdit_9, 0, 5, 1, 1)
        self.label_18 = QtWidgets.QLabel(self.frame_3)
        self.label_18.setObjectName("label_18")
        self.gridLayout_2.addWidget(self.label_18, 1, 0, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.frame_3)
        self.label_19.setObjectName("label_19")
        self.gridLayout_2.addWidget(self.label_19, 1, 2, 1, 1)
        self.dateEdit_2 = QtWidgets.QDateEdit(self.frame_3)
        self.dateEdit_2.setStyleSheet("QDateEdit {\n"
"    padding: 4px;\n"
"    border: 1px solid #ccc;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QDateEdit::down-arrow {\n"
"    image: url(:/icon/arrow_down2.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"QDateEdit::up-arrow {\n"
"    image: url(:/icon/arrow_up.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"\n"
"QDateEdit::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left: 1px solid #ccc;\n"
"}\n"
"")
        self.dateEdit_2.setCalendarPopup(True)
        self.dateEdit_2.setDate(QtCore.QDate(2025, 1, 1))
        self.dateEdit_2.setMinimumDate(QtCore.QDate(2025, 1, 1))
        self.dateEdit_2.setSpecialValueText("")
        self.dateEdit_2.clear()

        self.dateEdit_2.setObjectName("dateEdit_2")
        self.gridLayout_2.addWidget(self.dateEdit_2, 1, 3, 1, 1)
        self.pushButton_13 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_13.setStyleSheet("background-color: rgb(129, 158, 196); /* biru keabu-an lembut */\n"
"    color: white;\n"
"    border: none;\n"
"    border-radius: 15px;\n"
"    padding: 8px 20px;\n"
"    font-size: 14px;\n"
"background-color: rgb(139, 168, 210);\n"
"    background-color: rgb(90, 120, 160); /* lebih gelap pas ditekan */")
        self.pushButton_13.setObjectName("pushButton_13")
        self.gridLayout_2.addWidget(self.pushButton_13, 1, 5, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit_4.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout_2.addWidget(self.lineEdit_4, 1, 1, 1, 1)
        self.searchLineEdit_2 = QtWidgets.QLineEdit(self.page_5)
        self.searchLineEdit_2.setGeometry(QtCore.QRect(30, 180, 351, 41))
        self.searchLineEdit_2.setStatusTip("")
        self.searchLineEdit_2.setStyleSheet("QLineEdit {\n"
"    padding: 6px 10px;\n"
"    border: 2px solid #FFC107; \n"
"    border-radius: 8px;\n"
"    background-color: rgb(220, 222, 255);\n"
"    color: #333;\n"
"    font-size: 14px;\n"
"}\n"
"QLineEdit:focus {\n"
"    border: 2px solid #FFB300;\n"
"    background-color: #fff9cc;\n"
"}\n"
"")
        self.searchLineEdit_2.setObjectName("searchLineEdit_2")
        self.pushButton_14 = QtWidgets.QPushButton(self.page_5)
        self.pushButton_14.setGeometry(QtCore.QRect(390, 180, 101, 41))
        self.pushButton_14.setStyleSheet("QPushButton {\n"
"    padding: 6px 6px;\n"
"    background-color: #0000aa;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    font-size: 14px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #79a8ff;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #FFA000;\n"
"}\n"
"")
        self.pushButton_14.setIcon(icon4)
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_15 = QtWidgets.QPushButton(self.page_5)
        self.pushButton_15.setGeometry(QtCore.QRect(510, 180, 93, 41))
        self.pushButton_15.setStyleSheet("QPushButton {\n"
"    background-color: #2196F3;  \n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    font-weight: bold;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #1976D2;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #0D47A1;\n"
"}\n"
"")
        self.pushButton_15.setIcon(icon5)
        self.pushButton_15.setObjectName("pushButton_15")
        self.pushButton_16 = QtWidgets.QPushButton(self.page_5)
        self.pushButton_16.setGeometry(QtCore.QRect(620, 180, 93, 41))
        self.pushButton_16.setStyleSheet("QPushButton {\n"
"    background-color: #FF4C4C; \n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    font-weight: bold;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #E53935;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #C62828;  \n"
"}\n"
"")
        self.pushButton_16.setIcon(icon6)
        self.pushButton_16.setObjectName("pushButton_16")
        self.stackedWidget.addWidget(self.page_5)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.label_13 = QtWidgets.QLabel(self.page_4)
        self.label_13.setGeometry(QtCore.QRect(30, 20, 681, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("QLabel {\n"
"    border: 2px solid #000080;    \n"
"    border-radius: 5px;           \n"
"    padding: 5px;                 \n"
"    background-color: #ffffff;     \n"
"}\n"
"")
        self.label_13.setObjectName("label_13")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.page_4)
        self.tableWidget_3.setGeometry(QtCore.QRect(30, 230, 681, 301))
        self.tableWidget_3.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tableWidget_3.setStyleSheet("QHeaderView::section {\n"
"    background-color: #000080;  \n"
"    color: #ffffff;            \n"
"    padding: 5px;\n"
"    border: 1px solid #CCCCCC;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QTableWidget {\n"
"    background-color: #ffffff;             \n"
"    alternate-background-color: #EAF4FC;   \n"
"}\n"
"\n"
"")
        self.tableWidget_3.setAlternatingRowColors(True)
        self.tableWidget_3.setShowGrid(False)
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(5)
        self.tableWidget_3.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(4, item)
        self.tableWidget_3.horizontalHeader().setDefaultSectionSize(120)
        self.tableWidget_3.horizontalHeader().setMinimumSectionSize(50)
        self.tableWidget_3.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_3.verticalHeader().setVisible(False)
        self.pushButton_9 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_9.setGeometry(QtCore.QRect(590, 560, 121, 41))
        self.pushButton_9.setStyleSheet("QPushButton {\n"
"    color: #000080;\n"
"    border: none;\n"
"    border-radius: 15px;\n"
"    padding: 8px 20px;\n"
"    font-size: 14px;\n"
"    background-color: rgb(255, 244, 79);\n"
"}\n"
"\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(255, 230, 50); \n"
"}\n"
"\n"
"/* Pressed state */\n"
"QPushButton:pressed {\n"
"    background-color: rgb(240, 220, 30);  \n"
"}\n"
"")
        self.pushButton_9.setIcon(icon3)
        self.pushButton_9.setObjectName("pushButton_9")
        self.frame_4 = QtWidgets.QFrame(self.page_4)
        self.frame_4.setGeometry(QtCore.QRect(30, 70, 681, 91))
        self.frame_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 5px;                         \n"
"")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_14 = QtWidgets.QLabel(self.frame_4)
        self.label_14.setObjectName("label_14")
        self.gridLayout_3.addWidget(self.label_14, 0, 0, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_5.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout_3.addWidget(self.lineEdit_5, 0, 1, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.frame_4)
        self.label_16.setObjectName("label_16")
        self.gridLayout_3.addWidget(self.label_16, 0, 2, 1, 1)
        self.dateEdit_4 = QtWidgets.QDateEdit(self.frame_4)
        self.dateEdit_4.setStyleSheet("QDateEdit {\n"
"    padding: 4px;\n"
"    border: 1px solid #ccc;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QDateEdit::down-arrow {\n"
"    image: url(:/icon/arrow_down2.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"QDateEdit::up-arrow {\n"
"    image: url(:/icon/arrow_up.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"\n"
"QDateEdit::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left: 1px solid #ccc;\n"
"}\n"
"")
        self.dateEdit_4.setObjectName("dateEdit_4")
        self.gridLayout_3.addWidget(self.dateEdit_4, 0, 3, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.frame_4)
        self.label_15.setObjectName("label_15")
        self.gridLayout_3.addWidget(self.label_15, 0, 4, 1, 1)
        self.comboBox_2 = QtWidgets.QComboBox(self.frame_4)
        self.comboBox_2.setStyleSheet("QComboBox {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QComboBox:focus {\n"
"    border: 1px solid #7AA9FF;\n"
"    background-color: #f9fcff;\n"
"}\n"
"\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left: 1px solid #C0C0C0;\n"
"    background-color: #e6f0ff;\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(:/con/arrow_down.png); /* opsional, bisa hapus kalau ga ada */\n"
"    width: 12px;\n"
"    height: 12px;\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    selection-background-color: #dceaff;\n"
"    selection-color: #2D3A4B;\n"
"}\n"
"")
        self.comboBox_2.setEditable(True)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.setItemText(0, "")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.gridLayout_3.addWidget(self.comboBox_2, 0, 5, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.frame_4)
        self.label_20.setObjectName("label_20")
        self.gridLayout_3.addWidget(self.label_20, 1, 0, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_6.setStyleSheet("QLineEdit {\n"
"    background-color: #ffffff;\n"
"    border: 1px solid #C0C0C0;\n"
"    padding: 4px 6px;\n"
"    font-size: 14px;\n"
"    color: #2D3A4B;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border: 1px solid #7AA9FF;  /* garis fokus biru muda */\n"
"    background-color: #f9fcff;  /* sedikit highlight pas fokus */\n"
"}\n"
"")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout_3.addWidget(self.lineEdit_6, 1, 1, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.frame_4)
        self.label_21.setObjectName("label_21")
        self.gridLayout_3.addWidget(self.label_21, 1, 2, 1, 1)
        self.dateEdit_3 = QtWidgets.QDateEdit(self.frame_4)
        self.dateEdit_3.setStyleSheet("QDateEdit {\n"
"    padding: 4px;\n"
"    border: 1px solid #ccc;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QDateEdit::down-arrow {\n"
"    image: url(:/icon/arrow_down2.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"QDateEdit::up-arrow {\n"
"    image: url(:/icon/arrow_up.png);\n"
"    width: 14px;\n"
"    height: 14px;\n"
"}\n"
"\n"
"QDateEdit::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    width: 20px;\n"
"    border-left: 1px solid #ccc;\n"
"}\n"
"")
        self.dateEdit_3.setCalendarPopup(True)
        self.dateEdit_3.setDate(QtCore.QDate(2025, 1, 1))
        self.dateEdit_3.setMinimumDate(QtCore.QDate(2025, 1, 1))
        self.dateEdit_3.setSpecialValueText("")
        self.dateEdit_3.clear()

        self.dateEdit_4.setCalendarPopup(True)
        self.dateEdit_4.setDate(QtCore.QDate(2025, 1, 1))
        self.dateEdit_4.setMinimumDate(QtCore.QDate(2025, 1, 1))
        self.dateEdit_4.setSpecialValueText("")
        self.dateEdit_4.clear()


        self.dateEdit_3.setObjectName("dateEdit_3")
        self.gridLayout_3.addWidget(self.dateEdit_3, 1, 3, 1, 1)
        self.pushButton_17 = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_17.setStyleSheet("background-color: rgb(129, 158, 196); /* biru keabu-an lembut */\n"
"    color: white;\n"
"    border: none;\n"
"    border-radius: 15px;\n"
"    padding: 8px 20px;\n"
"    font-size: 14px;\n"
"background-color: rgb(139, 168, 210);\n"
"    background-color: rgb(90, 120, 160); /* lebih gelap pas ditekan */")
        self.pushButton_17.setObjectName("pushButton_17")
        self.gridLayout_3.addWidget(self.pushButton_17, 1, 5, 1, 1)
        self.searchLineEdit_3 = QtWidgets.QLineEdit(self.page_4)
        self.searchLineEdit_3.setGeometry(QtCore.QRect(30, 180, 351, 41))
        self.searchLineEdit_3.setStatusTip("")
        self.searchLineEdit_3.setStyleSheet("QLineEdit {\n"
"    padding: 6px 10px;\n"
"    border: 2px solid #FFC107; \n"
"    border-radius: 8px;\n"
"    background-color: rgb(220, 222, 255);\n"
"    color: #333;\n"
"    font-size: 14px;\n"
"}\n"
"QLineEdit:focus {\n"
"    border: 2px solid #FFB300;\n"
"    background-color: #fff9cc;\n"
"}\n"
"")
        self.searchLineEdit_3.setObjectName("searchLineEdit_3")
        self.pushButton_18 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_18.setGeometry(QtCore.QRect(390, 180, 101, 41))
        self.pushButton_18.setStyleSheet("QPushButton {\n"
"    padding: 6px 6px;\n"
"    background-color: #0000aa;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    font-size: 14px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #79a8ff;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #FFA000;\n"
"}\n"
"")
        self.pushButton_18.setIcon(icon4)
        self.pushButton_18.setObjectName("pushButton_18")
        self.pushButton_19 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_19.setGeometry(QtCore.QRect(510, 180, 93, 41))
        self.pushButton_19.setStyleSheet("QPushButton {\n"
"    background-color: #2196F3;  \n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    font-weight: bold;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #1976D2;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #0D47A1;\n"
"}\n"
"")
        self.pushButton_19.setIcon(icon5)
        self.pushButton_19.setObjectName("pushButton_19")
        self.pushButton_20 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_20.setGeometry(QtCore.QRect(620, 180, 93, 41))
        self.pushButton_20.setStyleSheet("QPushButton {\n"
"    background-color: #FF4C4C; \n"
"    color: white;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-radius: 10px;\n"
"    font-weight: bold;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #E53935;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #C62828;  \n"
"}\n"
"")
        self.pushButton_20.setIcon(icon6)
        self.pushButton_20.setObjectName("pushButton_20")
        self.stackedWidget.addWidget(self.page_4)
        self.verticalLayout.addWidget(self.frame_Base)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuExit = QtWidgets.QMenu(self.menubar)
        self.menuExit.setObjectName("menuExit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.statusLabel = QtWidgets.QLabel("Nama: Adina Ayu Daraswita | NIM: F1D022030")
        self.statusLabel.setEnabled(False)  
        self.statusbar.addPermanentWidget(self.statusLabel)

        self.actionFile = QtWidgets.QAction(MainWindow)
        self.actionFile.setObjectName("actionFile")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionopen = QtWidgets.QAction(MainWindow)
        self.actionopen.setObjectName("actionopen")
        self.menuFile.addAction(self.actionFile)
        self.menuFile.addAction(self.actionopen)
        self.menuHelp.addAction(self.actionHelp)
        self.menuExit.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menubar.addAction(self.menuExit.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(1)

        self.load_books()

        self.actionExportCSV.triggered.connect(self.export_to_csv)
        self.pushButton_7.clicked.connect(self.export_books_to_csv)
        self.pushButton_2.clicked.connect(self.export_books_to_csv)
        self.pushButton_9.clicked.connect(self.export_books_to_csv)
        self.actionFile.triggered.connect(self.go_to_books)
        self.actionopen.triggered.connect(self.go_to_members)
        self.actionHelp.triggered.connect(self.show_about)
        self.actionExit.triggered.connect(self.exit_app)




        QtCore.QMetaObject.connectSlotsByName(MainWindow)
      

        
        self.pushButton_3.setCheckable(True)
        self.pushButton_4.setCheckable(True)
        self.pushButton_5.setCheckable(True)


        calendar_popup_style = """
        QDateEdit {
                padding: 4px;
                border: 1px solid #ccc;
                border-radius: 4px;
        }

        QCalendarWidget QAbstractItemView {
                background-color: #ffffff;
                color: #000000;
                selection-background-color: #2196F3;
                selection-color: white;
                font-size: 14px;
        }

        QCalendarWidget QWidget#qt_calendar_navigationbar {
                background-color: #f57c00;  /* background atas kalender */
        }

        QCalendarWidget QToolButton {
                color: white;               /* warna teks bulan dan tahun */
                font-size: 16px;
                font-weight: bold;
                background-color: transparent;
        }

        QCalendarWidget QToolButton:hover {
                color: #ffff99;
        }
        """

        for date_edit in [self.dateEdit, self.dateEdit_2, self.dateEdit_3, self.dateEdit_4]:
                date_edit.setCalendarPopup(True)
                date_edit.setStyleSheet(calendar_popup_style)


     
        

        def switch_page(index):
                self.pushButton_3.setChecked(False)
                self.pushButton_4.setChecked(False)
                self.pushButton_5.setChecked(False)

                self.stackedWidget.setCurrentIndex(index)

                if index == 0:
                        self.pushButton_3.setChecked(True)
                elif index == 1:
                        self.pushButton_4.setChecked(True)
                elif index == 2:
                        self.pushButton_5.setChecked(True)


        self.pushButton_3.clicked.connect(lambda: switch_page(0))
        self.pushButton_4.clicked.connect(lambda: switch_page(1))
        self.pushButton_5.clicked.connect(lambda: switch_page(2))




        self.pushButton_3.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))  
        self.pushButton_4.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1)) 
        self.pushButton_5.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(2)) 

        self.stackedWidget.setCurrentIndex(0)
        self.pushButton_3.setChecked(True)


        self.pushButton.clicked.connect(self.save_book)       
        self.pushButton_11.clicked.connect(self.edit_book)     
        self.pushButton_12.clicked.connect(self.delete_book)  
        self.pushButton_10.clicked.connect(self.search_books)  
        self.load_books()  

      
        self.pushButton_13.clicked.connect(self.save_member)
        self.pushButton_15.clicked.connect(self.edit_member)
        self.pushButton_16.clicked.connect(self.delete_member)
        self.pushButton_14.clicked.connect(self.search_members)
        self.load_members()

             
        self.pushButton_17.clicked.connect(self.save_borrower)
        self.pushButton_19.clicked.connect(self.edit_borrower)
        self.pushButton_20.clicked.connect(self.delete_borrower)
        self.pushButton_18.clicked.connect(self.search_borrowers)
        self.load_borrowers()


    def go_to_books(self):
        self.stackedWidget.setCurrentIndex(0)

    def go_to_members(self):
        self.stackedWidget.setCurrentIndex(1)
    def exit_app(self):
        QtWidgets.QApplication.quit()



    def save_book(self):
        from database import create_connection  
    
        title = self.lineEdit.text().strip()
        category = self.lineEdit_7.text().strip()
        author = self.lineEdit_2.text().strip()
        date = self.dateEdit.date().toString("yyyy-MM-dd")
        status = self.comboBox.currentText().strip()


        if not title or not category or not author or not date or status == "":
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Semua kolom harus diisi sebelum menyimpan!")
                return  

        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("""
                INSERT INTO books (title, category, author, date, status)
                VALUES (?, ?, ?, ?, ?)
        """, (title, category, author, date, status))
        conn.commit()
        conn.close()
        self.load_books()

        self.lineEdit.clear()
        self.lineEdit_7.clear()
        self.lineEdit_2.clear()
        self.comboBox.setCurrentIndex(0)

    def load_books(self):
        from database import create_connection
        self.tableWidget.setRowCount(0)
        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT title, category, author, date, status FROM books")
        rows = cursor.fetchall()
        for row_data in rows:
            row_number = self.tableWidget.rowCount()
            self.tableWidget.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.tableWidget.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.close()


    def edit_book(self):
        selected = self.tableWidget.currentRow()
        if selected < 0:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Pilih buku yang ingin diedit.")
                return

        def get_item(row, col):
                item = self.tableWidget.item(row, col)
                return item.text() if item else ""

        book_data = {
                "title": get_item(selected, 0),
                "category": get_item(selected, 1),
                "author": get_item(selected, 2),
                "date": get_item(selected, 3),
                "status": get_item(selected, 4),
        }

        dialog = EditBookDialog(book_data)
        if dialog.exec_() == QtWidgets.QDialog.Accepted:
                updated = dialog.get_data()

                conn = create_connection()
                cursor = conn.cursor()
                cursor.execute("""
                UPDATE books 
                SET title = ?, category = ?, author = ?, date = ?, status = ?
                WHERE title = ?
                """, (
                updated["title"], updated["category"], updated["author"],
                updated["date"], updated["status"], book_data["title"]
                ))
                conn.commit()
                conn.close()
                self.load_books()


    def delete_book(self):
        selected = self.tableWidget.currentRow()
        if selected < 0:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Pilih data buku yang ingin dihapus!")
                return

        confirm = QtWidgets.QMessageBox.question(
                None,
                "Konfirmasi Hapus",
                "Apakah kamu yakin ingin menghapus buku ini?",
                QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No
        )

        if confirm == QtWidgets.QMessageBox.Yes:
                title = self.tableWidget.item(selected, 0).text()
                conn = create_connection()
                cursor = conn.cursor()
                cursor.execute("DELETE FROM books WHERE title = ?", (title,))
                conn.commit()
                conn.close()
                self.load_books()


    def search_books(self):
        keyword = self.searchLineEdit.text()
        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT title, category, author, date, status FROM books WHERE title LIKE ? or category LIKE ? or author LIKE ?", ('%' + keyword + '%', '%' + keyword + '%', '%' + keyword + '%'))
        rows = cursor.fetchall()
        self.tableWidget.setRowCount(0)
        for row_data in rows:
                row_number = self.tableWidget.rowCount()
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.close()

    def save_member(self):
        member_id = self.lineEdit_4.text().strip()
        name = self.lineEdit_3.text().strip()
        email = self.lineEdit_8.text().strip()
        phone = self.lineEdit_9.text().strip()
        join_date = self.dateEdit_2.date().toString("yyyy-MM-dd") 


        if not member_id or not name or not email or not phone or not join_date:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Semua kolom harus diisi sebelum menyimpan!")
                return
        email_pattern = r"^[\w\.-]+@[\w\.-]+\.\w+$"
        if not re.match(email_pattern, email):
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Format email tidak valid!")
                return
        phone_pattern = r"^(08\d{8,12}|\+628\d{7,12})$"
        if not re.match(phone_pattern, phone):
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Masukkan No. Telp dengan benar, gunakan +62 atau 08 diawal")
                return

        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("""
                INSERT INTO members (member_id, name, email, phone, join_date)
                VALUES (?, ?, ?, ?, ?)
        """, (member_id, name, email, phone, join_date))
        conn.commit()
        conn.close()
        self.load_members()


        self.lineEdit_4.clear()
        self.lineEdit_3.clear()
        self.lineEdit_8.clear()
        self.lineEdit_9.clear()
        self.dateEdit_2.setDate(QtCore.QDate.currentDate()) 

    def load_members(self):
        self.tableWidget_2.setRowCount(0)
        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT name, member_id, email, join_date, phone FROM members")
        rows = cursor.fetchall()
        for row_data in rows:
                row_number = self.tableWidget_2.rowCount()
                self.tableWidget_2.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget_2.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.close()
    def edit_member(self):
        selected = self.tableWidget_2.currentRow()
        if selected < 0:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Pilih data member yang ingin diedit.")
                return

        def get_item(row, col):
                item = self.tableWidget_2.item(row, col)
                return item.text() if item else ""

        member_data = {
                "name": get_item(selected, 0),
                "member_id": get_item(selected, 1),
                "email": get_item(selected, 2),
                "join_date": get_item(selected, 3),
                "phone": get_item(selected, 4)
                }

        dialog = EditMemberDialog(member_data)
        if dialog.exec_() == QtWidgets.QDialog.Accepted:
                updated = dialog.get_data()

                conn = create_connection()
                cursor = conn.cursor()
                cursor.execute("""
                UPDATE members
                SET member_id = ?, name = ?, email = ?, phone = ?, join_date = ?
                WHERE member_id = ?
                """, (
                updated["member_id"], updated["name"], updated["email"],
                updated["phone"], updated["join_date"], member_data["member_id"]
                ))
                conn.commit()
                conn.close()
                self.load_members()

    def delete_member(self):
        selected = self.tableWidget_2.currentRow()
        if selected < 0:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Pilih data member yang ingin dihapus!")
                return

        confirm = QtWidgets.QMessageBox.question(
                None,
                "Konfirmasi Hapus",
                "Apakah kamu yakin ingin menghapus member ini?",
                QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No
        )

        if confirm == QtWidgets.QMessageBox.Yes:
                member_id = self.tableWidget_2.item(selected, 1).text()
                conn = create_connection()
                cursor = conn.cursor()
                cursor.execute("DELETE FROM members WHERE member_id = ?", (member_id,))
                conn.commit()
                conn.close()
                self.load_members()

    def search_members(self):
        keyword = self.searchLineEdit_2.text()
        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT name, member_id, email, join_date, phone FROM members WHERE name LIKE ? or member_id LIKE?", ('%' + keyword + '%',))
        rows = cursor.fetchall()
        self.tableWidget_2.setRowCount(0)
        for row_data in rows:
                row_number = self.tableWidget_2.rowCount()
                self.tableWidget_2.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget_2.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.close()

    def save_borrower(self):
        title = self.lineEdit_5.text().strip()
        borrower = self.lineEdit_6.text().strip()
        borrow_date = self.dateEdit_3.date().toString("yyyy-MM-dd")
        due_date = self.dateEdit_4.date().toString("yyyy-MM-dd")
        status = self.comboBox_2.currentText().strip()

        if not title or not borrower or not borrow_date or not due_date or not status:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Semua kolom harus diisi sebelum menyimpan!")
                return

        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("""
                INSERT INTO borrowings (title, borrower, borrow_date, due_date, status)
                VALUES (?, ?, ?, ?, ?)
        """, (title, borrower, borrow_date, due_date, status))
        conn.commit()
        conn.close()
        self.load_borrowers()

        self.lineEdit_5.clear()
        self.lineEdit_6.clear()
        self.dateEdit_3.setDate(QtCore.QDate.currentDate())
        self.dateEdit_4.setDate(QtCore.QDate.currentDate())
        self.comboBox_2.setCurrentIndex(0)

    def load_borrowers(self):
        self.tableWidget_3.setRowCount(0)
        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT title, borrower, borrow_date, due_date, status FROM borrowings")
        rows = cursor.fetchall()
        for row_data in rows:
                row_number = self.tableWidget_3.rowCount()
                self.tableWidget_3.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget_3.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.close()

    def edit_borrower(self):
        selected = self.tableWidget_3.currentRow()
        if selected < 0:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Pilih baris peminjaman yang ingin diedit.")
                return

        def get_item(row, col):
                item = self.tableWidget_3.item(row, col)
                return item.text() if item else ""

        borrower_data = {
                "title": get_item(selected, 0),
                "borrower": get_item(selected, 1),
                "borrow_date": get_item(selected, 2),
                "due_date": get_item(selected, 3),
                "status": get_item(selected, 4)
        }

        dialog = EditBorrowerDialog(borrower_data)
        if dialog.exec_() == QtWidgets.QDialog.Accepted:
                updated = dialog.get_data()

                conn = create_connection()
                cursor = conn.cursor()
                cursor.execute("""
                UPDATE borrowings
                SET title = ?, borrower = ?, borrow_date = ?, due_date = ?, status = ?
                WHERE title = ? AND borrower = ?
                """, (
                updated["title"], updated["borrower"], updated["borrow_date"],
                updated["due_date"], updated["status"],
                borrower_data["title"], borrower_data["borrower"]
                ))
                conn.commit()
                conn.close()
                self.load_borrowers()


    def delete_borrower(self):
        selected = self.tableWidget_3.currentRow()
        if selected < 0:
                QtWidgets.QMessageBox.warning(None, "Peringatan", "Pilih data peminjaman yang ingin dihapus!")
                return

        confirm = QtWidgets.QMessageBox.question(
                None,
                "Konfirmasi Hapus",
                "Apakah kamu yakin ingin menghapus data peminjaman ini?",
                QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No
        )

        if confirm == QtWidgets.QMessageBox.Yes:
                title = self.tableWidget_3.item(selected, 0).text()
                borrower = self.tableWidget_3.item(selected, 1).text()
                conn = create_connection()
                cursor = conn.cursor()
                cursor.execute("DELETE FROM borrowings WHERE title = ? AND borrower = ?", (title, borrower))
                conn.commit()
                conn.close()
                self.load_borrowers()


    def search_borrowers(self):
        keyword = self.searchLineEdit_3.text()
        conn = create_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT title, borrower, borrow_date, due_date, status FROM borrowings WHERE title LIKE ?", ('%' + keyword + '%',))
        rows = cursor.fetchall()
        self.tableWidget_3.setRowCount(0)
        for row_data in rows:
                row_number = self.tableWidget_3.rowCount()
                self.tableWidget_3.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget_3.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.close()


    def export_books_to_csv(self):
        import csv
        path, _ = QtWidgets.QFileDialog.getSaveFileName(
                None, "Simpan File CSV", "", "CSV Files (*.csv)"
        )
        if path:
                with open(path, mode="w", newline="", encoding="utf-8") as file:
                        writer = csv.writer(file)
                headers = ["Title", "Category", "Author", "Date", "Status"]
                writer.writerow(headers)
                for row in range(self.tableWidget.rowCount()):
                        row_data = []
                        for col in range(self.tableWidget.columnCount()):
                                item = self.tableWidget.item(row, col)
                        row_data.append(item.text() if item else "")
                        writer.writerow(row_data)
                QtWidgets.QMessageBox.information(None, "Sukses", "Data berhasil diekspor.")

    def export_members_to_csv(self):
        path, _ = QtWidgets.QFileDialog.getSaveFileName(
                None, "Simpan Data Member ke CSV", "", "CSV Files (*.csv)"
        )
        if path:
                with open(path, mode="w", newline="", encoding="utf-8") as file:
                        writer = csv.writer(file)
                headers = ["Member ID", "Name", "Email", "Phone", "Join Date"]
                writer.writerow(headers)
                for row in range(self.tableWidget_2.rowCount()):
                        row_data = []
                        for col in range(self.tableWidget_2.columnCount()):
                                item = self.tableWidget_2.item(row, col)
                        row_data.append(item.text() if item else "")
                        writer.writerow(row_data)
                QtWidgets.QMessageBox.information(None, "Sukses", "Data member berhasil diekspor.")

    def export_borrowers_to_csv(self):
        import csv
        path, _ = QtWidgets.QFileDialog.getSaveFileName(
                None, "Simpan Data Peminjam ke CSV", "", "CSV Files (*.csv)"
        )
        if path:
                with open(path, mode="w", newline="", encoding="utf-8") as file:
                        writer = csv.writer(file)
                headers = ["Judul Buku", "Nama Peminjam", "Tanggal Pinjam", "Jatuh Tempo", "Status"]
                writer.writerow(headers)
                for row in range(self.tableWidget_3.rowCount()):
                        row_data = []
                        for col in range(self.tableWidget_3.columnCount()):
                                item = self.tableWidget_3.item(row, col)
                        row_data.append(item.text() if item else "")
                        writer.writerow(row_data)
                QtWidgets.QMessageBox.information(None, "Sukses", "Data peminjam berhasil diekspor.")



    def export_to_csv(self):
        current_index = self.stackedWidget.currentIndex()
    
        if current_index == 0:
                table = self.tableWidget
        elif current_index == 1:
                table = self.tableWidget_2
        elif current_index == 2:
                table = self.tableWidget_3
        else:
                QtWidgets.QMessageBox.warning(None, "Gagal", "Tidak ada tabel yang dapat diekspor.")
                return

        path, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save CSV", "", "CSV Files (*.csv)")
        if path:
                with open(path, mode='w', newline='', encoding='utf-8') as file:
                        writer = csv.writer(file)

                        headers = [table.horizontalHeaderItem(i).text() for i in range(table.columnCount())]
                        writer.writerow(headers)

                        for row in range(table.rowCount()):
                                row_data = []
                                for column in range(table.columnCount()):
                                        item = table.item(row, column)
                                        row_data.append(item.text() if item else "")
                                writer.writerow(row_data)

                QtWidgets.QMessageBox.information(None, "Sukses", "Data berhasil diekspor ke CSV.")
    
    def show_about(self):
        QtWidgets.QMessageBox.information(
                None,
                "Tentang Aplikasi",
                " Book Buddy\n\nAplikasi manajemen perpustakaan sederhana.\nDibuat oleh: Adina Ayu Daraswita\nNIM: F1D022030"
        )

    def exit_app(self):
        reply = QtWidgets.QMessageBox.question(None, "Keluar", "Yakin ingin keluar?", 
                                                QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        if reply == QtWidgets.QMessageBox.Yes:
                QtWidgets.QApplication.quit()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_5.setText(_translate("MainWindow", "Book Buddy"))
        self.pushButton_3.setText(_translate("MainWindow", "Manage Books"))
        self.pushButton_4.setText(_translate("MainWindow", "Manage Members"))
        self.pushButton_5.setText(_translate("MainWindow", "Manage Borrower"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Judul Buku"))
        self.label.setText(_translate("MainWindow", "Judul"))
        self.lineEdit_7.setPlaceholderText(_translate("MainWindow", "Kategori Buku"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "Nama Pengarang"))
        self.label_2.setText(_translate("MainWindow", "Kategori"))
        self.label_12.setText(_translate("MainWindow", "Pengarang"))
        self.label_4.setText(_translate("MainWindow", "Status"))
        self.label_3.setText(_translate("MainWindow", "Tanggal"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Tersedia"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Belum Tersedia"))
        self.pushButton.setText(_translate("MainWindow", "Simpan"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Judul"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "category"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Pengarang"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Tanggal"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Status"))
        self.pushButton_2.setText(_translate("MainWindow", "Export"))
        self.label_7.setText(_translate("MainWindow", "Manage Books"))
        self.searchLineEdit.setPlaceholderText(_translate("MainWindow", "Cari"))
        self.pushButton_10.setText(_translate("MainWindow", "Search"))
        self.pushButton_11.setText(_translate("MainWindow", "Edit"))
        self.pushButton_12.setText(_translate("MainWindow", "Delete"))
        self.label_8.setText(_translate("MainWindow", "Manage Members"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Nama"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Member Id"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Email"))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Tgl. Gabung"))
        item = self.tableWidget_2.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "No. telepon"))
        self.pushButton_7.setText(_translate("MainWindow", "Export"))
        self.label_9.setText(_translate("MainWindow", "Nama"))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "Nama "))
        self.label_10.setText(_translate("MainWindow", "Email"))
        self.lineEdit_8.setPlaceholderText(_translate("MainWindow", "Alamat Email"))
        self.label_11.setText(_translate("MainWindow", "No. Telp"))
        self.lineEdit_9.setPlaceholderText(_translate("MainWindow", "+62"))
        self.label_18.setText(_translate("MainWindow", "NIM/NIS/NIK"))
        self.label_19.setText(_translate("MainWindow", "Tgl. Gabung"))
        self.pushButton_13.setText(_translate("MainWindow", "Simpan"))
        self.lineEdit_4.setPlaceholderText(_translate("MainWindow", "NIM/NIS/NIK"))
        self.searchLineEdit_2.setPlaceholderText(_translate("MainWindow", "Cari"))
        self.pushButton_14.setText(_translate("MainWindow", "Search"))
        self.pushButton_15.setText(_translate("MainWindow", "Edit"))
        self.pushButton_16.setText(_translate("MainWindow", "Delete"))
        self.label_13.setText(_translate("MainWindow", "Manage Borrower"))
        item = self.tableWidget_3.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Judul"))
        item = self.tableWidget_3.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Peminjam"))
        item = self.tableWidget_3.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Tgl. Pinjam"))
        item = self.tableWidget_3.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Jatuh Tempo"))
        item = self.tableWidget_3.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Status"))
        self.pushButton_9.setText(_translate("MainWindow", "Export"))
        self.label_14.setText(_translate("MainWindow", "Judul"))
        self.lineEdit_5.setPlaceholderText(_translate("MainWindow", "Judul Buku"))
        self.label_16.setText(_translate("MainWindow", "Jatuh Tempo"))
        self.label_15.setText(_translate("MainWindow", "Status"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "Dipinjam"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "Dikembalikan"))
        self.label_20.setText(_translate("MainWindow", "Peminjam"))
        self.lineEdit_6.setPlaceholderText(_translate("MainWindow", "Nama Peminjam"))
        self.label_21.setText(_translate("MainWindow", "Tgl. Pinjam"))
        self.pushButton_17.setText(_translate("MainWindow", "Simpan"))
        self.searchLineEdit_3.setPlaceholderText(_translate("MainWindow", "Cari"))
        self.pushButton_18.setText(_translate("MainWindow", "Search"))
        self.pushButton_19.setText(_translate("MainWindow", "Edit"))
        self.pushButton_20.setText(_translate("MainWindow", "Delete"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuExit.setTitle(_translate("MainWindow", "Exit"))
        self.actionFile.setText(_translate("MainWindow", "Books"))
        self.actionFile.setToolTip(_translate("MainWindow", "File Menu"))
        self.actionHelp.setText(_translate("MainWindow", "About"))
        self.actionHelp.setToolTip(_translate("MainWindow", "Help Menu"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionopen.setText(_translate("MainWindow", "Members"))
        self.actionExportCSV = QtWidgets.QAction("Export to CSV", MainWindow)
        self.menuFile.addAction(self.actionExportCSV)

class EditBookDialog(QtWidgets.QDialog):
    def __init__(self, book_data=None, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Edit Buku")
        self.setModal(True)
        self.resize(300, 250)

        self.title_input = QtWidgets.QLineEdit()
        self.category_input = QtWidgets.QLineEdit()
        self.author_input = QtWidgets.QLineEdit()
        self.date_input = QtWidgets.QDateEdit()
        self.date_input.setCalendarPopup(True)
        self.status_input = QtWidgets.QComboBox()
        self.status_input.addItems(["Tersedia", "Belum Tersedia"])

        form = QtWidgets.QFormLayout()
        form.addRow("Judul:", self.title_input)
        form.addRow("Kategori:", self.category_input)
        form.addRow("Pengarang:", self.author_input)
        form.addRow("Tanggal:", self.date_input)
        form.addRow("Status:", self.status_input)

        btn = QtWidgets.QPushButton("Simpan")
        btn.clicked.connect(self.accept)

        layout = QtWidgets.QVBoxLayout()
        layout.addLayout(form)
        layout.addWidget(btn)
        self.setLayout(layout)

        if book_data:
            self.title_input.setText(book_data["title"])
            self.category_input.setText(book_data["category"])
            self.author_input.setText(book_data["author"])
            self.date_input.setDate(QtCore.QDate.fromString(book_data["date"], "yyyy-MM-dd"))
            self.status_input.setCurrentText(book_data["status"])

    def get_data(self):
        return {
            "title": self.title_input.text(),
            "category": self.category_input.text(),
            "author": self.author_input.text(),
            "date": self.date_input.date().toString("yyyy-MM-dd"),
            "status": self.status_input.currentText()
        }
class EditMemberDialog(QtWidgets.QDialog):
    def __init__(self, member_data=None, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Edit Member")
        self.setModal(True)
        self.resize(300, 250)

        self.id_input = QtWidgets.QLineEdit()
        self.name_input = QtWidgets.QLineEdit()
        self.email_input = QtWidgets.QLineEdit()
        self.phone_input = QtWidgets.QLineEdit()
        self.date_input = QtWidgets.QDateEdit()
        self.date_input.setCalendarPopup(True)

        form = QtWidgets.QFormLayout()
        form.addRow("ID:", self.id_input)
        form.addRow("Nama:", self.name_input)
        form.addRow("Email:", self.email_input)
        form.addRow("No HP:", self.phone_input)
        form.addRow("Tanggal Gabung:", self.date_input)

        btn = QtWidgets.QPushButton("Simpan")
        btn.clicked.connect(self.accept)

        layout = QtWidgets.QVBoxLayout()
        layout.addLayout(form)
        layout.addWidget(btn)
        self.setLayout(layout)

        if member_data:
            self.id_input.setText(member_data["member_id"])
            self.name_input.setText(member_data["name"])
            self.email_input.setText(member_data["email"])
            self.phone_input.setText(member_data["phone"])
            self.date_input.setDate(QtCore.QDate.fromString(member_data["join_date"], "yyyy-MM-dd"))

    def get_data(self):
        return {
            "member_id": self.id_input.text(),
            "name": self.name_input.text(),
            "email": self.email_input.text(),
            "phone": self.phone_input.text(),
            "join_date": self.date_input.date().toString("yyyy-MM-dd")
        }

class EditBorrowerDialog(QtWidgets.QDialog):
    def __init__(self, borrower_data=None, parent=None):
        super().__init__(parent)
        self.setWindowTitle("Edit Peminjaman")
        self.setModal(True)
        self.resize(300, 250)

        self.title_input = QtWidgets.QLineEdit()
        self.borrower_input = QtWidgets.QLineEdit()
        self.borrow_date_input = QtWidgets.QDateEdit()
        self.due_date_input = QtWidgets.QDateEdit()
        self.status_input = QtWidgets.QComboBox()
        self.borrow_date_input.setCalendarPopup(True)
        self.due_date_input.setCalendarPopup(True)
        self.status_input.addItems(["Dipinjam", "Dikembalikan"])

        form = QtWidgets.QFormLayout()
        form.addRow("Judul Buku:", self.title_input)
        form.addRow("Peminjam:", self.borrower_input)
        form.addRow("Tanggal Pinjam:", self.borrow_date_input)
        form.addRow("Jatuh Tempo:", self.due_date_input)
        form.addRow("Status:", self.status_input)

        btn = QtWidgets.QPushButton("Simpan")
        btn.clicked.connect(self.accept)

        layout = QtWidgets.QVBoxLayout()
        layout.addLayout(form)
        layout.addWidget(btn)
        self.setLayout(layout)

        if borrower_data:
            self.title_input.setText(borrower_data["title"])
            self.borrower_input.setText(borrower_data["borrower"])
            self.borrow_date_input.setDate(QtCore.QDate.fromString(borrower_data["borrow_date"], "yyyy-MM-dd"))
            self.due_date_input.setDate(QtCore.QDate.fromString(borrower_data["due_date"], "yyyy-MM-dd"))
            self.status_input.setCurrentText(borrower_data["status"])

    def get_data(self):
        return {
            "title": self.title_input.text(),
            "borrower": self.borrower_input.text(),
            "borrow_date": self.borrow_date_input.date().toString("yyyy-MM-dd"),
            "due_date": self.due_date_input.date().toString("yyyy-MM-dd"),
            "status": self.status_input.currentText()
        }



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    create_tables()
    MainWindow.show()
    sys.exit(app.exec_())
